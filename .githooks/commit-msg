#!/usr/bin/env bash

# Path to the commit message file (provided by Git).
COMMIT_MSG_FILE=$1

# Read the commit message from the file.
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# More complete regex that enforces the full format
if [[ $COMMIT_MSG =~ ^(feat|fix|docs|style|refactor|test|chore|build|ci|perf|revert)(\([a-zA-Z0-9_.-]+\))?(!)?:[[:space:]].*$ ]]; then
  exit 0
else
  echo "ERROR: Commit message does not follow Conventional Commits format."
  echo
  echo "The commit message should be structured as follows:"
  echo "<type>(<optional scope>): <description>"
  echo "[optional body]"
  echo "[optional footer(s)]"
  echo
  echo "Valid types are:"
  echo "  feat:     A new feature."
  echo "  fix:      A bug fix."
  echo "  docs:     Documentation changes."
  echo "  style:    Code style changes (formatting, missing semicolons, etc.)."
  echo "  refactor: Code refactoring (neither fixes a bug nor adds a feature)."
  echo "  test:     Adding or updating tests."
  echo "  chore:    Routine tasks like updating dependencies or build tools."
  echo "  build:    Changes affecting the build system or external dependencies."
  echo "  ci:       Changes to CI configuration files or scripts."
  echo "  perf:     Performance improvements."
  echo "  revert:   Reverting a previous commit."
  echo
  echo "Examples:"
  echo "  feat(auth): add login functionality"
  echo "  fix(api)!: resolve timeout issue"
  echo "  docs(readme): update installation instructions"
  echo
  exit 1
fi
